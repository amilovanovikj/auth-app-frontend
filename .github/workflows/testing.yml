on:
  push:
    branches:
    - testing

env:
  RESOURCE_GROUP_NAME: auth-test-01-rg
  APP_NAME: auth-app-frontend
  AZURE_WEBAPP_NAME: azwe-frontend-t01-auth
  ENV_TYPE: test
  NODE_VERSION: '16.x'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Run unit tests
      run: yarn test:unit
    - name: Run integration tests
      run: yarn test:e2e
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    environment: testing
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Az login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Get runner public IP
      id: ip
      uses: haythem/public-ip@v1.2
    - name: Add runner IP to firewall
      run: |
        az acr network-rule add -n ${{ secrets.REGISTRY_SERVER }} -g ${{ secrets.REGISTRY_RESOURCE_GROUP }} --ip-address ${{ steps.ip.outputs.ipv4 }} > /dev/null
        az keyvault network-rule add -n ${{ secrets.KEY_VAULT_NAME }} -g ${{ env.RESOURCE_GROUP_NAME }} --ip-address ${{ steps.ip.outputs.ipv4 }} > /dev/null
        sleep 10s
    - name: Get key vault secrets
      uses: azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ secrets.KEY_VAULT_NAME }}
        secrets: 'server-url, appinsights-connection-string'
      id: kv
    - name: Create .env file
      run: |
        cat << EOF >> .env
        NODE_ENV = testing
        VUE_APP_BACKEND_URL = ${{ steps.kv.outputs.server-url }}
        VUE_APP_INSIGHTS_CONNECTION_STRING = ${{ steps.kv.outputs.appinsights-connection-string }}
        EOF
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Docker build
      run: |
        docker build -t ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }} .
        docker tag ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }} ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ env.ENV_TYPE }}-latest
    - name: Run Snyk scan
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}
        args: --file=Dockerfile
    - name: Upload Snyk results to GitHub
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif
    - name: Docker push
      run: |
        docker push ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ env.ENV_TYPE }}-latest
    - name: Deploy
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: '${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}'
    - name: Remove runner IP from firewall
      if: always()
      run: |
        az acr network-rule remove -n ${{ secrets.REGISTRY_SERVER }} -g ${{ secrets.REGISTRY_RESOURCE_GROUP }} --ip-address ${{ steps.ip.outputs.ipv4 }} > /dev/null
        az keyvault network-rule remove -n ${{ secrets.KEY_VAULT_NAME }} -g ${{ env.RESOURCE_GROUP_NAME }} --ip-address ${{ steps.ip.outputs.ipv4 }}/32 > /dev/null
    - name: Az logout
      if: always()
      run: |
        az logout